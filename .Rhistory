install.packages("ProjectTemplate")
library(ProjectTemplate)
create.project("../my_project", merge.strategy = "allow.non.conflict")
download.file("https://raw.githubusercontent.com/resbaz/r-novice-gapminder-files/master/data/gapminder-FiveYearData.csv", "data/gapminder-FiveYearData.csv")
?function_name
help (head)
?head
?"+"
c(1, 2, 3)
c('d', 'e', 'f')
c(1, 2, 'f')
help("paste")
?paste
dbl_var <- c(1, 2.5, 4.5)
int_var <- c(1L, 6L, 10L)
log_var <- c(TRUE, FALSE, T, F)
chr_var <- c("these are", "some strings")
a <- c("a", 1)
b <- c(TRUE, 1)
c <- c(1L, 10)
d <- c(a, b, c)
typeof(a); typeof(b); typeof(c); typeof(d)
x <- c(FALSE, FALSE, TRUE)
as.numeric(x)
sum(x)
mean(x)
x <- list(1:3, "a", c(TRUE, FALSE, TRUE), c(2.3, 5.9))
str(x)
type(1:3)
typeof(1:3)
x
str(x)
x <- list(list(list(list())))
str(x)
is.recursive(x)
x <- list(list(1, 2), c(3, 4))
y <- c(list(1, 2), c(3, 4))
str(x)
mtcars
typeof(mtcars)
is.list(mtcars)
mod <- lm(mpg ~ wt, data = mtcars)
mod
help("datasets")
library(help = "datasets")
c(1, FALSE)
c("a", 1)
typeof(c)
y <- c
typrof(c)
typeof(y)
y <- c(1, FALSE)
typeof(y)
z <- c("a", 1)
typeof(z)
e <- c(list(1), "a")
typeof(e)
f <- c(TRUE, 1L)
typeof(f)
is.vector(e)
is.numeric(f)
f
is.numeric(f)
is.character(y)
is.vector(e)
is.vector(e)
is.atomic(e)
is.numeric(e)
is.character(e)
is.complex(e)
is.double(e)
str(mtcar)
str(mtcars)
is.vector(mtcars)
is.list(mtcars)
is.data.frame(mtcars)
1 == "1"
-1 < FALSE
"one" < 2
"one" < 3
"one" < 4
"one" < 255
"one"  > 2
"one"  > 2555
x <- c(a = 1, b = 2, c = 3)
x
x+x
typeof(x)
name(x)
namesx
namesx
names(x)
names(x)
names(y)
names(y)
y <- setNames(x, c("a", "b", "c"))
names(y)
y <- c(a = 1, 2, 3)
names(y)
z <- c(1, 2, 3)
names(z)
x <- c("a", "b", "b", "a")
x
x <- factor(x)
x
class(x)
levels(x)
is.vector(x)
x[2] <- "b"
x[2] <- "c"
x
c(x, factor("b"))
class(c(x, factor("b")))
sex_char <- c("m", "m", "m")
sex_factor <- factor(sex_char, levels = c("m", "f"))
table(sex_char)
table(sex_factor)
a <- matrix(1:6, ncol = 3, nrow = 2)
b <- array(1:12, c(2, 3, 2))
a
b
c <- 1:12
dim(c) <- c(3, 4)
c
dim(c) <- c(4, 3)
c
dim(c) <- c(2, 3, 2)
c
str(1:3)
str(matrix(1:3, ncol = 1))
dim(str)
dim(x) <- c(2,2)
dim(x)
dim(c) <- c(2,2)
c
is.marix(x)
is.matrix(x)
is.array(x)
x1 <- array(1:5, c(1, 1, 5))
x1
is.atomic(e)
install.packages("LDheatmap")
install.packages("multic")
install.packages("phangorn")
install.packages("qtl")
install.packages("seqinr")
install.packages("wgaim")
install.packages("tm")
help("paste")
google <- read.csv("google_correlate.csv", header = T)
google <- read.csv("C:\\Users\\RuixiangLiu\\Desktop\\google_correlate.csv", header = T)
google <- read.csv("E:\\BCB546\\R\\Exercise Files\\Ch05\\05_03\\google_correlate.csv", header = T)
names(google)
pairs(~data_viz + degree + facebook + nba,
data = google,
pch = 20,
main = "Simple Scatterplot Matrix")
IF2_LW <- read.csv("IF2_LW_BLUP_VALUE", header = T)
IF2_LW <- read.csv("E:\\BCB546\\my_project\\data\\IF2_LW_BLUP_VALUE", header = T)
IF2_LW <- read.csv("E:\\BCB546\\my_project\\data\\IF2_LW_BLUP_VALUE.csv", header = T)
names(IF2_LW)
pairs(~L1W + L2W + L3W + L4W + L5W + L6W + L7W,
data = IF2_LW,
pch = 20,
main = "Simple Scatterplot Matrix")
library("psych")
install.packages("psych")
library("psych")
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0)
??pairs.panels()
pairs.panels(attitude)   #see the graphics window
data(iris)
pairs.panels(iris[1:4],bg=c("red","yellow","blue")[iris$Species],
pch=21,main="Fisher Iris data by Species") #to show color grouping
pairs.panels(iris[1:4],bg=c("red","yellow","blue")[iris$Species],
pch=21+as.numeric(iris$Species),main="Fisher Iris data by Species",hist.col="red")
#to show changing the diagonal
data(sat.act)
pairs.panels(sat.act,show.points=FALSE)
pairs.panels(sat.act,pch=".")
data(bfi)
pairs.panels(bfi,show.points=FALSE,gap=0)
sb <- statsBy(sat.act,"education")
pairs.panels(sb$mean,wt=sb$n)
pairs.panels(sb$mean)
browseVignettes(package = "psych")
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, rug = FALSE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, rug = FALSE, show.points = FALSE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, hist.col = "gray")
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, treering)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, lm = FALSE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, lm = TRUE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, cor = TRUE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= FALSE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE)
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE, hist.col= "red")
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE, hist.col= "red", hist.default(xlim = 0.5))
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE, hist.col= "red", hist(0.5))
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE, hist.col= "red", hist.default()
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE, hist.col= "red", hist.default())
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE, hist.col= "red")
pairs(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE, hist.col= "red")
pairs.default(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE, hist.col= "red")
pairs.panels(IF2_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE, hist.col= "red")
IF2.quant <- IF2_LW[c(2, 3, 4, 5, 6, 7, 8)]
cor(IF2.quant)
cortest(IF2.quant$L1W, IF2.quant$L2W)
cor.test(IF2.quant$L1W, IF2.quant$L2W)
library("Hmisc")
install.packages("Hmisc")
rcorr(as.matrix(IF2.quant))
library("Hmisc")
library("Hmisc")
install.packages("Hmisc")
library("Hmisc")
library("Hmisc")
rcorr(as.matrix(IF2.quant))
RIL_LW <- read.csv("E:\\BCB546\\my_project\\data\\RIL_LW_BLUP_VALUE.csv", header = T)  # load the data
names(RIL_LW)
pairs.panels(RIL_LW[c(2, 3, 4, 5, 6, 7, 8)], gap = 0, ellipses=FALSE, density= TRUE, cor= FALSE, hist.col= "red")
install.packages("propr")
